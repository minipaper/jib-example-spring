plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "com.google.cloud.tools.jib" version "1.8.0"
}

ext {
    BUILD_VERSION = new Date().format("yyyyMMddHHmmss") // 빌드한 시간을 Image Tag 로 표시하기 위하여 사용한다.
}

group = 'net.minipaper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = "openjdk:8-jre-alpine"
//        image = "docker://openjdk:8-jre-alpine" // 로컬에 이미지를 이용해서 빌드하면 좀더 빠름
    }
    to {
        image = "minipaper/jib-example-spring"
        tags = ["${BUILD_VERSION}".toString()]
//        tags = ["${project.version}".toString(), "${BUILD_VERSION}".toString()]
    }
    container {
        mainClass = "net.minipaper.jib.JibApplication"
        ports = ["8080"]
        volumes = ["/tmp"]
    }
}
